
cppClass.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000042a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000012  00802000  0000042a  000004be  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  00802012  00802012  000004d0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004d0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000500  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000068  00000000  00000000  00000540  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000330e  00000000  00000000  000005a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00002965  00000000  00000000  000038b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000774  00000000  00000000  0000621b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000bc  00000000  00000000  00006990  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001d9a  00000000  00000000  00006a4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000065d  00000000  00000000  000087e6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  00008e43  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 ff 00 	jmp	0x1fe	; 0x1fe <__ctors_end>
   4:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
   8:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
   c:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  10:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  14:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  18:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  1c:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  20:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  24:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  28:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  2c:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  30:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  34:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  38:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  3c:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  40:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  44:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  48:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  4c:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  50:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  54:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  58:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  5c:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  60:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  64:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  68:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  6c:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  70:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  74:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  78:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  7c:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  80:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  84:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  88:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  8c:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  90:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  94:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  98:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  9c:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  a0:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  a4:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  a8:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  ac:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  b0:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  b4:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  b8:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  bc:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  c0:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  c4:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  c8:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  cc:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  d0:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  d4:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  d8:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  dc:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  e0:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  e4:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  e8:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  ec:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  f0:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  f4:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  f8:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
  fc:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 100:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 104:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 108:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 10c:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 110:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 114:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 118:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 11c:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 120:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 124:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 128:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 12c:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 130:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 134:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 138:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 13c:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 140:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 144:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 148:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 14c:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 150:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 154:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 158:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 15c:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 160:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 164:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 168:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 16c:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 170:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 174:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 178:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 17c:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 180:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 184:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 188:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 18c:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 190:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 194:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 198:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 19c:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1a0:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1a4:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1a8:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1ac:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1b0:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1b4:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1b8:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1bc:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1c0:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1c4:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1c8:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1cc:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1d0:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1d4:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1d8:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1dc:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1e0:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1e4:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1e8:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1ec:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1f0:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1f4:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>
 1f8:	0c 94 27 01 	jmp	0x24e	; 0x24e <__bad_interrupt>

000001fc <__ctors_start>:
 1fc:	06 02       	muls	r16, r22

000001fe <__ctors_end>:
 1fe:	11 24       	eor	r1, r1
 200:	1f be       	out	0x3f, r1	; 63
 202:	cf ef       	ldi	r28, 0xFF	; 255
 204:	cd bf       	out	0x3d, r28	; 61
 206:	d7 e2       	ldi	r29, 0x27	; 39
 208:	de bf       	out	0x3e, r29	; 62

0000020a <__do_copy_data>:
 20a:	10 e2       	ldi	r17, 0x20	; 32
 20c:	a0 e0       	ldi	r26, 0x00	; 0
 20e:	b0 e2       	ldi	r27, 0x20	; 32
 210:	ea e2       	ldi	r30, 0x2A	; 42
 212:	f4 e0       	ldi	r31, 0x04	; 4
 214:	02 c0       	rjmp	.+4      	; 0x21a <__do_copy_data+0x10>
 216:	05 90       	lpm	r0, Z+
 218:	0d 92       	st	X+, r0
 21a:	a2 31       	cpi	r26, 0x12	; 18
 21c:	b1 07       	cpc	r27, r17
 21e:	d9 f7       	brne	.-10     	; 0x216 <__do_copy_data+0xc>

00000220 <__do_clear_bss>:
 220:	20 e2       	ldi	r18, 0x20	; 32
 222:	a2 e1       	ldi	r26, 0x12	; 18
 224:	b0 e2       	ldi	r27, 0x20	; 32
 226:	01 c0       	rjmp	.+2      	; 0x22a <.do_clear_bss_start>

00000228 <.do_clear_bss_loop>:
 228:	1d 92       	st	X+, r1

0000022a <.do_clear_bss_start>:
 22a:	a3 31       	cpi	r26, 0x13	; 19
 22c:	b2 07       	cpc	r27, r18
 22e:	e1 f7       	brne	.-8      	; 0x228 <.do_clear_bss_loop>

00000230 <__do_global_ctors>:
 230:	10 e0       	ldi	r17, 0x00	; 0
 232:	cf ef       	ldi	r28, 0xFF	; 255
 234:	d0 e0       	ldi	r29, 0x00	; 0
 236:	04 c0       	rjmp	.+8      	; 0x240 <__do_global_ctors+0x10>
 238:	21 97       	sbiw	r28, 0x01	; 1
 23a:	fe 01       	movw	r30, r28
 23c:	0e 94 0d 02 	call	0x41a	; 0x41a <__tablejump2__>
 240:	ce 3f       	cpi	r28, 0xFE	; 254
 242:	d1 07       	cpc	r29, r17
 244:	c9 f7       	brne	.-14     	; 0x238 <__do_global_ctors+0x8>
 246:	0e 94 da 01 	call	0x3b4	; 0x3b4 <main>
 24a:	0c 94 13 02 	jmp	0x426	; 0x426 <_exit>

0000024e <__bad_interrupt>:
 24e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000252 <_ZN7HD4478011_PORTA_OUT_Eh>:
	_delay_us(10);
}

void HD44780::_PORTA_OUT_(uint8_t byte)
{
	PORTA_OUTCLR = 255;
 252:	8f ef       	ldi	r24, 0xFF	; 255
 254:	80 93 06 06 	sts	0x0606, r24	; 0x800606 <__TEXT_REGION_LENGTH__+0x7fb606>
	uint8_t j = 128;
	for (uint8_t i = 1; j > 0; i = i << 1){
 258:	21 e0       	ldi	r18, 0x01	; 1
}

void HD44780::_PORTA_OUT_(uint8_t byte)
{
	PORTA_OUTCLR = 255;
	uint8_t j = 128;
 25a:	80 e8       	ldi	r24, 0x80	; 128
	for (uint8_t i = 1; j > 0; i = i << 1){
 25c:	88 23       	and	r24, r24
 25e:	51 f0       	breq	.+20     	; 0x274 <_ZN7HD4478011_PORTA_OUT_Eh+0x22>
		if (byte & i) PORTA_OUTSET = j;
 260:	92 2f       	mov	r25, r18
 262:	96 23       	and	r25, r22
 264:	11 f0       	breq	.+4      	; 0x26a <_ZN7HD4478011_PORTA_OUT_Eh+0x18>
 266:	80 93 05 06 	sts	0x0605, r24	; 0x800605 <__TEXT_REGION_LENGTH__+0x7fb605>
		j = j >> 1;
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	95 95       	asr	r25
 26e:	87 95       	ror	r24

void HD44780::_PORTA_OUT_(uint8_t byte)
{
	PORTA_OUTCLR = 255;
	uint8_t j = 128;
	for (uint8_t i = 1; j > 0; i = i << 1){
 270:	22 0f       	add	r18, r18
 272:	f4 cf       	rjmp	.-24     	; 0x25c <_ZN7HD4478011_PORTA_OUT_Eh+0xa>
 274:	08 95       	ret

00000276 <_ZN7HD447808Send_CmdEh>:
//} //~HD44780



void HD44780::Send_Cmd(uint8_t byte)
{
 276:	cf 93       	push	r28
 278:	df 93       	push	r29
	
	PORTB_OUTCLR = 1;
 27a:	c6 e2       	ldi	r28, 0x26	; 38
 27c:	d6 e0       	ldi	r29, 0x06	; 6
 27e:	21 e0       	ldi	r18, 0x01	; 1
 280:	28 83       	st	Y, r18
	_PORTA_OUT_(byte);
 282:	0e 94 29 01 	call	0x252	; 0x252 <_ZN7HD4478011_PORTA_OUT_Eh>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 286:	86 e0       	ldi	r24, 0x06	; 6
 288:	8a 95       	dec	r24
 28a:	f1 f7       	brne	.-4      	; 0x288 <_ZN7HD447808Send_CmdEh+0x12>
 28c:	00 c0       	rjmp	.+0      	; 0x28e <_ZN7HD447808Send_CmdEh+0x18>

	_delay_us(10);

	PORTB_OUTSET = 2;
 28e:	82 e0       	ldi	r24, 0x02	; 2
 290:	80 93 25 06 	sts	0x0625, r24	; 0x800625 <__TEXT_REGION_LENGTH__+0x7fb625>
 294:	96 e0       	ldi	r25, 0x06	; 6
 296:	9a 95       	dec	r25
 298:	f1 f7       	brne	.-4      	; 0x296 <_ZN7HD447808Send_CmdEh+0x20>
 29a:	00 c0       	rjmp	.+0      	; 0x29c <_ZN7HD447808Send_CmdEh+0x26>

	_delay_us(10);

	PORTB_OUTCLR = 2;
 29c:	88 83       	st	Y, r24
 29e:	86 e0       	ldi	r24, 0x06	; 6
 2a0:	8a 95       	dec	r24
 2a2:	f1 f7       	brne	.-4      	; 0x2a0 <_ZN7HD447808Send_CmdEh+0x2a>
 2a4:	00 c0       	rjmp	.+0      	; 0x2a6 <_ZN7HD447808Send_CmdEh+0x30>

	_delay_us(10);

}
 2a6:	df 91       	pop	r29
 2a8:	cf 91       	pop	r28
 2aa:	08 95       	ret

000002ac <_ZN7HD44780C1Ev>:


#include "HD44780.h"

// default constructor
HD44780::HD44780()
 2ac:	cf 93       	push	r28
 2ae:	df 93       	push	r29
 2b0:	ec 01       	movw	r28, r24
{
		PORTA_DIR = 0xFF;
 2b2:	8f ef       	ldi	r24, 0xFF	; 255
 2b4:	80 93 00 06 	sts	0x0600, r24	; 0x800600 <__TEXT_REGION_LENGTH__+0x7fb600>
		PORTB_DIR = 0xFF;
 2b8:	80 93 20 06 	sts	0x0620, r24	; 0x800620 <__TEXT_REGION_LENGTH__+0x7fb620>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2bc:	8f e4       	ldi	r24, 0x4F	; 79
 2be:	93 ec       	ldi	r25, 0xC3	; 195
 2c0:	01 97       	sbiw	r24, 0x01	; 1
 2c2:	f1 f7       	brne	.-4      	; 0x2c0 <_ZN7HD44780C1Ev+0x14>
 2c4:	00 c0       	rjmp	.+0      	; 0x2c6 <_ZN7HD44780C1Ev+0x1a>
 2c6:	00 00       	nop
		_delay_ms(100);
		Send_Cmd(HD44780_Function_Set_8bit_2line_5x8_gc);
 2c8:	68 e3       	ldi	r22, 0x38	; 56
 2ca:	ce 01       	movw	r24, r28
 2cc:	0e 94 3b 01 	call	0x276	; 0x276 <_ZN7HD447808Send_CmdEh>
 2d0:	83 ec       	ldi	r24, 0xC3	; 195
 2d2:	99 e0       	ldi	r25, 0x09	; 9
 2d4:	01 97       	sbiw	r24, 0x01	; 1
 2d6:	f1 f7       	brne	.-4      	; 0x2d4 <_ZN7HD44780C1Ev+0x28>
 2d8:	00 c0       	rjmp	.+0      	; 0x2da <_ZN7HD44780C1Ev+0x2e>
 2da:	00 00       	nop
		_delay_ms(5);	// wait min 4.1ms
		Send_Cmd(HD44780_Function_Set_8bit_2line_5x8_gc);
 2dc:	68 e3       	ldi	r22, 0x38	; 56
 2de:	ce 01       	movw	r24, r28
 2e0:	0e 94 3b 01 	call	0x276	; 0x276 <_ZN7HD447808Send_CmdEh>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2e4:	99 e4       	ldi	r25, 0x49	; 73
 2e6:	9a 95       	dec	r25
 2e8:	f1 f7       	brne	.-4      	; 0x2e6 <_ZN7HD44780C1Ev+0x3a>
 2ea:	00 00       	nop
		_delay_us(110); // wait min 100us
		Send_Cmd(HD44780_Function_Set_8bit_2line_5x8_gc);
 2ec:	68 e3       	ldi	r22, 0x38	; 56
 2ee:	ce 01       	movw	r24, r28
 2f0:	0e 94 3b 01 	call	0x276	; 0x276 <_ZN7HD447808Send_CmdEh>
 2f4:	81 e2       	ldi	r24, 0x21	; 33
 2f6:	8a 95       	dec	r24
 2f8:	f1 f7       	brne	.-4      	; 0x2f6 <_ZN7HD44780C1Ev+0x4a>
 2fa:	00 00       	nop
		_delay_us(50); // wait min 37us

		Send_Cmd(HD44780_Function_Set_8bit_2line_5x8_gc);
 2fc:	68 e3       	ldi	r22, 0x38	; 56
 2fe:	ce 01       	movw	r24, r28
 300:	0e 94 3b 01 	call	0x276	; 0x276 <_ZN7HD447808Send_CmdEh>
 304:	91 e2       	ldi	r25, 0x21	; 33
 306:	9a 95       	dec	r25
 308:	f1 f7       	brne	.-4      	; 0x306 <_ZN7HD44780C1Ev+0x5a>
 30a:	00 00       	nop
		_delay_us(50); // wait min 37us

		Send_Cmd(HD44780_Display_Control_OFF_OFF_OFF_gc);
 30c:	68 e0       	ldi	r22, 0x08	; 8
 30e:	ce 01       	movw	r24, r28
 310:	0e 94 3b 01 	call	0x276	; 0x276 <_ZN7HD447808Send_CmdEh>
 314:	81 e2       	ldi	r24, 0x21	; 33
 316:	8a 95       	dec	r24
 318:	f1 f7       	brne	.-4      	; 0x316 <_ZN7HD44780C1Ev+0x6a>
 31a:	00 00       	nop
		_delay_us(50); // wait min 37us

		Send_Cmd(HD44780_Clear_Display_gc);
 31c:	61 e0       	ldi	r22, 0x01	; 1
 31e:	ce 01       	movw	r24, r28
 320:	0e 94 3b 01 	call	0x276	; 0x276 <_ZN7HD447808Send_CmdEh>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 324:	87 ee       	ldi	r24, 0xE7	; 231
 326:	93 e0       	ldi	r25, 0x03	; 3
 328:	01 97       	sbiw	r24, 0x01	; 1
 32a:	f1 f7       	brne	.-4      	; 0x328 <_ZN7HD44780C1Ev+0x7c>
 32c:	00 c0       	rjmp	.+0      	; 0x32e <_ZN7HD44780C1Ev+0x82>
 32e:	00 00       	nop
		_delay_ms(2); // wait min 37us

		Send_Cmd(HD44780_Entry_Mode_Set_ON_OFF_gc);
 330:	66 e0       	ldi	r22, 0x06	; 6
 332:	ce 01       	movw	r24, r28
 334:	0e 94 3b 01 	call	0x276	; 0x276 <_ZN7HD447808Send_CmdEh>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 338:	91 e2       	ldi	r25, 0x21	; 33
 33a:	9a 95       	dec	r25
 33c:	f1 f7       	brne	.-4      	; 0x33a <_ZN7HD44780C1Ev+0x8e>
 33e:	00 00       	nop
		_delay_us(50); // wait min 37us

		Send_Cmd(HD44780_Return_Home_gc);
 340:	62 e0       	ldi	r22, 0x02	; 2
 342:	ce 01       	movw	r24, r28
 344:	0e 94 3b 01 	call	0x276	; 0x276 <_ZN7HD447808Send_CmdEh>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 348:	87 ee       	ldi	r24, 0xE7	; 231
 34a:	93 e0       	ldi	r25, 0x03	; 3
 34c:	01 97       	sbiw	r24, 0x01	; 1
 34e:	f1 f7       	brne	.-4      	; 0x34c <_ZN7HD44780C1Ev+0xa0>
 350:	00 c0       	rjmp	.+0      	; 0x352 <_ZN7HD44780C1Ev+0xa6>
 352:	00 00       	nop
		_delay_ms(2); // wait min 37us

		Send_Cmd(HD44780_Display_Control_ON_ON_ON_gc);
 354:	6f e0       	ldi	r22, 0x0F	; 15
 356:	ce 01       	movw	r24, r28
 358:	0e 94 3b 01 	call	0x276	; 0x276 <_ZN7HD447808Send_CmdEh>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 35c:	91 e2       	ldi	r25, 0x21	; 33
 35e:	9a 95       	dec	r25
 360:	f1 f7       	brne	.-4      	; 0x35e <_ZN7HD44780C1Ev+0xb2>
 362:	00 00       	nop
		_delay_us(50); // wait min 37us
} //HD44780
 364:	df 91       	pop	r29
 366:	cf 91       	pop	r28
 368:	08 95       	ret

0000036a <_ZN7HD447809Send_DataEh>:
	_delay_us(10);

}

void HD44780::Send_Data(uint8_t byte)
{
 36a:	cf 93       	push	r28
 36c:	df 93       	push	r29
	PORTB_OUTSET = 1;
 36e:	c5 e2       	ldi	r28, 0x25	; 37
 370:	d6 e0       	ldi	r29, 0x06	; 6
 372:	21 e0       	ldi	r18, 0x01	; 1
 374:	28 83       	st	Y, r18
	_PORTA_OUT_(byte);
 376:	0e 94 29 01 	call	0x252	; 0x252 <_ZN7HD4478011_PORTA_OUT_Eh>
 37a:	86 e0       	ldi	r24, 0x06	; 6
 37c:	8a 95       	dec	r24
 37e:	f1 f7       	brne	.-4      	; 0x37c <_ZN7HD447809Send_DataEh+0x12>
 380:	00 c0       	rjmp	.+0      	; 0x382 <_ZN7HD447809Send_DataEh+0x18>

	_delay_us(10);

	PORTB_OUTSET = 2;
 382:	82 e0       	ldi	r24, 0x02	; 2
 384:	88 83       	st	Y, r24
 386:	96 e0       	ldi	r25, 0x06	; 6
 388:	9a 95       	dec	r25
 38a:	f1 f7       	brne	.-4      	; 0x388 <_ZN7HD447809Send_DataEh+0x1e>
 38c:	00 c0       	rjmp	.+0      	; 0x38e <_ZN7HD447809Send_DataEh+0x24>

	_delay_us(10);

	PORTB_OUTCLR = 2;
 38e:	80 93 26 06 	sts	0x0626, r24	; 0x800626 <__TEXT_REGION_LENGTH__+0x7fb626>
 392:	86 e0       	ldi	r24, 0x06	; 6
 394:	8a 95       	dec	r24
 396:	f1 f7       	brne	.-4      	; 0x394 <_ZN7HD447809Send_DataEh+0x2a>
 398:	00 c0       	rjmp	.+0      	; 0x39a <_ZN7HD447809Send_DataEh+0x30>

	_delay_us(10);
}
 39a:	df 91       	pop	r29
 39c:	cf 91       	pop	r28
 39e:	08 95       	ret

000003a0 <_Z41__static_initialization_and_destruction_0ii>:
	display.Send_Data('c');
	PORTA_OUT = *(p_qwe);
    while (1) 
    {
    }
}
 3a0:	01 97       	sbiw	r24, 0x01	; 1
 3a2:	39 f4       	brne	.+14     	; 0x3b2 <_Z41__static_initialization_and_destruction_0ii+0x12>
 3a4:	6f 3f       	cpi	r22, 0xFF	; 255
 3a6:	7f 4f       	sbci	r23, 0xFF	; 255
 3a8:	21 f4       	brne	.+8      	; 0x3b2 <_Z41__static_initialization_and_destruction_0ii+0x12>
 uint8_t qwe[] = "qweqweqweqeqeq";

uint8_t*	p_qwe = qwe;


HD44780 display;
 3aa:	82 e1       	ldi	r24, 0x12	; 18
 3ac:	90 e2       	ldi	r25, 0x20	; 32
 3ae:	0e 94 56 01 	call	0x2ac	; 0x2ac <_ZN7HD44780C1Ev>
 3b2:	08 95       	ret

000003b4 <main>:

int main(void)
{
    /* Replace with your application code */
	display.Send_Data(*qwe);
 3b4:	60 91 02 20 	lds	r22, 0x2002	; 0x802002 <qwe>
 3b8:	82 e1       	ldi	r24, 0x12	; 18
 3ba:	90 e2       	ldi	r25, 0x20	; 32
 3bc:	0e 94 b5 01 	call	0x36a	; 0x36a <_ZN7HD447809Send_DataEh>
	display.Send_Data('a');
 3c0:	61 e6       	ldi	r22, 0x61	; 97
 3c2:	82 e1       	ldi	r24, 0x12	; 18
 3c4:	90 e2       	ldi	r25, 0x20	; 32
 3c6:	0e 94 b5 01 	call	0x36a	; 0x36a <_ZN7HD447809Send_DataEh>
	display.Send_Data('t');
 3ca:	64 e7       	ldi	r22, 0x74	; 116
 3cc:	82 e1       	ldi	r24, 0x12	; 18
 3ce:	90 e2       	ldi	r25, 0x20	; 32
 3d0:	0e 94 b5 01 	call	0x36a	; 0x36a <_ZN7HD447809Send_DataEh>
	display.Send_Data('a');
 3d4:	61 e6       	ldi	r22, 0x61	; 97
 3d6:	82 e1       	ldi	r24, 0x12	; 18
 3d8:	90 e2       	ldi	r25, 0x20	; 32
 3da:	0e 94 b5 01 	call	0x36a	; 0x36a <_ZN7HD447809Send_DataEh>
	//display.Send_Cmd(0x40 | 128); Set_X_Y(x,y)
	display.Send_Data('a');
 3de:	61 e6       	ldi	r22, 0x61	; 97
 3e0:	82 e1       	ldi	r24, 0x12	; 18
 3e2:	90 e2       	ldi	r25, 0x20	; 32
 3e4:	0e 94 b5 01 	call	0x36a	; 0x36a <_ZN7HD447809Send_DataEh>
	display.Send_Data('b');
 3e8:	62 e6       	ldi	r22, 0x62	; 98
 3ea:	82 e1       	ldi	r24, 0x12	; 18
 3ec:	90 e2       	ldi	r25, 0x20	; 32
 3ee:	0e 94 b5 01 	call	0x36a	; 0x36a <_ZN7HD447809Send_DataEh>
	display.Send_Data('c');
 3f2:	63 e6       	ldi	r22, 0x63	; 99
 3f4:	82 e1       	ldi	r24, 0x12	; 18
 3f6:	90 e2       	ldi	r25, 0x20	; 32
 3f8:	0e 94 b5 01 	call	0x36a	; 0x36a <_ZN7HD447809Send_DataEh>
	PORTA_OUT = *(p_qwe);
 3fc:	e0 91 00 20 	lds	r30, 0x2000	; 0x802000 <__data_start>
 400:	f0 91 01 20 	lds	r31, 0x2001	; 0x802001 <__data_start+0x1>
 404:	80 81       	ld	r24, Z
 406:	80 93 04 06 	sts	0x0604, r24	; 0x800604 <__TEXT_REGION_LENGTH__+0x7fb604>
 40a:	ff cf       	rjmp	.-2      	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>

0000040c <_GLOBAL__sub_I_qwe>:
    while (1) 
    {
    }
}
 40c:	6f ef       	ldi	r22, 0xFF	; 255
 40e:	7f ef       	ldi	r23, 0xFF	; 255
 410:	81 e0       	ldi	r24, 0x01	; 1
 412:	90 e0       	ldi	r25, 0x00	; 0
 414:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <_Z41__static_initialization_and_destruction_0ii>
 418:	08 95       	ret

0000041a <__tablejump2__>:
 41a:	ee 0f       	add	r30, r30
 41c:	ff 1f       	adc	r31, r31
 41e:	05 90       	lpm	r0, Z+
 420:	f4 91       	lpm	r31, Z
 422:	e0 2d       	mov	r30, r0
 424:	09 94       	ijmp

00000426 <_exit>:
 426:	f8 94       	cli

00000428 <__stop_program>:
 428:	ff cf       	rjmp	.-2      	; 0x428 <__stop_program>
